@using AIStudio.Settings.DataModel
@inherits LayoutComponentBase

<MudPaper Height="calc(100vh);" Elevation="0">
    <MudLayout>
        @if (!this.performingUpdate)
        {
            <MudDrawerContainer Class="mud-height-full absolute">
                <MudDrawer @bind-Open="@this.navBarOpen" MiniWidth="@NAVBAR_COLLAPSED_WIDTH" Width="@NAVBAR_EXPANDED_WIDTH" Elevation="1" Fixed="@true" Variant="@DrawerVariant.Mini" OpenMiniOnHover="@(this.SettingsManager.ConfigurationData.App.NavigationBehavior is NavBehavior.EXPAND_ON_HOVER)" Color="Color.Default">
                    <MudNavMenu>
                        @foreach (var navBarItem in NAV_ITEMS)
                        {
                            if (this.SettingsManager.ConfigurationData.App.NavigationBehavior is NavBehavior.NEVER_EXPAND_USE_TOOLTIPS)
                            {
                                <MudTooltip Text="@navBarItem.Name" Placement="Placement.Right">
                                    <MudNavLink Href="@navBarItem.Path" Match="@(navBarItem.MatchAll ? NavLinkMatch.All : NavLinkMatch.Prefix)" Icon="@navBarItem.Icon" IconColor="@navBarItem.IconColor">@navBarItem.Name</MudNavLink>
                                </MudTooltip>
                            }
                            else
                            {
                                <MudNavLink Href="@navBarItem.Path" Match="@(navBarItem.MatchAll ? NavLinkMatch.All : NavLinkMatch.Prefix)" Icon="@navBarItem.Icon" IconColor="@navBarItem.IconColor">@navBarItem.Name</MudNavLink>
                            }
                        }
                    </MudNavMenu>
                </MudDrawer>
            </MudDrawerContainer>
        }

        <MudMainContent Class="mud-height-full pt-1" Style="@this.PaddingLeft">
            <MudContainer Fixed="@true" Class="mud-height-full" Style="margin-left: 5em; width: calc(100% - 5em);">
                @if (!this.performingUpdate && this.IsUpdateAlertVisible)
                {
                    <MudAlert NoIcon="@true" Severity="Severity.Info" Variant="Variant.Filled" ShowCloseIcon="@true" Dense="@true" CloseIconClicked="() => this.DismissUpdate()" Class="mt-2 mb-2">
                        <div class="d-inline-flex align-center">
                            <MudIcon Icon="@Icons.Material.Filled.Update" Size="Size.Medium" Class="mr-3"/>
                            An update to version @this.updateToVersion is available.
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" Class="ml-3" OnClick="() => this.ShowUpdateDialog()">
                                Show details
                            </MudButton>
                        </div>
                    </MudAlert>
                }

                @if (!this.performingUpdate)
                {
                    <CascadingValue Value="@this" IsFixed="true">
                        @this.Body
                    </CascadingValue>
                }

                <MudOverlay Visible="@this.performingUpdate" DarkBackground="@true" LockScroll="@true">
                    <MudText Typo="Typo.h3">Please wait for the update to complete...</MudText>
                    <MudProgressLinear Color="Color.Primary" Indeterminate="@true" Size="Size.Large" Rounded="@true"/>
                </MudOverlay>
            </MudContainer>
        </MudMainContent>
    </MudLayout>
</MudPaper>